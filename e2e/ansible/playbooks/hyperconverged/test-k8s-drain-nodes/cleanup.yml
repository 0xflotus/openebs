---
- name: Delete Percona deployment
  shell: source ~/.profile; kubectl delete -f "{{ percona_link }}"
  args:
    executable: /bin/bash
  register: del_out
  until: "'percona' and 'deleted' in del_out.stdout"
  delay: 30
  retries: 5
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  changed_when: True

- name: Confirm percona pod has been deleted
  shell: source ~/.profile; kubectl get pods --all-namespaces -l name=percona
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "'percona' not in result.stdout"
  delay: 30
  retries: 10
  changed_when: True

- name: uncordon the node which is drained
  shell: source ~/.profile; kubectl uncordon {{ node1.stdout }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "'uncordoned' in result.stdout"
  delay: 5
  retries: 10
  changed_when: True


- name: Remove test artifacts
  file:
    path: "{{ result_kube_home.stdout }}/{{ item }}"
    state: absent
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  with_items:
     - "{{test_artifacts}}"

