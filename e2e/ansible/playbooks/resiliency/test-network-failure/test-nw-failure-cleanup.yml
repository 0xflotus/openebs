---
- name: Delete pumba infrastructure
  shell: source ~/.profile; kubectl delete daemonset  pumba
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

- name: Confirm pumba pod has been deleted
  shell: source ~/.profile; kubectl get pods --no-headers -l app=pumba
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "'pumba' not in result.stdout"
  delay: 30
  retries: 10

- name: Delete percona mysql pod 
  shell: source ~/.profile; kubectl delete -f {{ percona_files.0 }} 
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"

- name: Confirm percona pod has been deleted
  shell: source ~/.profile; kubectl get pods -l name=percona 
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  until: "'percona' not in result.stdout"
  delay: 30
  retries: 10

- name: Get pvc name to verify successful pvc deletion
  shell: source ~/.profile; kubectl get pvc | grep {{ test_name }} | awk {'print $3'}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: pvc

- name: Confirm pvc pod has been deleted
  shell: source ~/.profile; kubectl get pods | grep {{ pvc.stdout }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  failed_when: "'pvc' and 'Running' in result.stdout"
  delay: 30
  retried: 10

- name: Remove the percona liveness check config map 
  shell: source ~/.profile; kubectl delete cm sqltest 
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  failed_when: "'configmap' and 'deleted' not in result.stdout"


  
 
 
