---
- name: Get pvc name to verify successful pvc deletion
  shell: source ~/.profile; kubectl get pvc | grep {{ replace_with.0 }} | awk {'print $3'}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: pvc

- name: Delete pumba infrastructure
  include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/delete_deploy.yml"
  vars:
    app_yml: "{{ pumba_file }}"

- name: Delete percona mysql pod
  include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/delete_deploy.yml"
  vars:
    app_yml: "{{ percona_files.0 }}"

- name: Confirm percona pod deletion
  include_tasks: "{{ansible_env.HOME}}/{{utils_path}}/delete_deploy_check.yml"
  vars:
    app: percona

- name: Confirm pvc pod has been deleted
  shell: source ~/.profile; kubectl get pods | grep {{ pvc.stdout }}
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  failed_when: "'pvc' and 'Running' in result.stdout"
  delay: 30
  retried: 10

- name: Remove the percona liveness check config map 
  shell: source ~/.profile; kubectl delete cm sqltest 
  args:
    executable: /bin/bash
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  register: result
  failed_when: "'configmap' and 'deleted' not in result.stdout"

- name: Remove test artifacts
  file:
    path: "{{ result_kube_home.stdout }}/{{ item }}"
    state: absent
  delegate_to: "{{groups['kubernetes-kubemasters'].0}}"
  with_items:
    - "{{percona_files}}"
  
 
 
